【はじめに】
　Webサーバを負荷分散環境で運用していると、大量のファイルを複数台のサーバへ、
できるだけ速く転送する必要がでてきます。以下のスクリプトのように、rsyncを使っ
て1台づつ順番に転送するのは簡単で確実ですが、これではサーバ台数に比例して転送
にかかる時間が増えていってしまいます。

#!/bin/sh
for i in host2 host3 host4 do
  rsync -aRv /var/www/ $i:/
done

  +-------+        +-------+
  | host1 |------->| host2 |
  +-------+        +-------+

  +-------+        +-------+
  | host1 |------->| host3 |
  +-------+        +-------+

  +-------+        +-------+
  | host1 |------->| host4 |
  +-------+        +-------+

また、このスクリプトのように転送先のホスト名をハードコードしてしまうと、サー
バが増えたり減ったりした場合にスクリプトを書き換える必要があります。サーバが
故障したり増設した際に、うっかりこの作業を忘れてしまうと「ファイルが転送され
ない！」という障害に直結してしまいます。

これらの問題は、「稼働中のサーバをきちんと管理する仕組」と「並列にファイル転
送する仕組（下図参照）」を作ることで解決できます。この構成はとても転送効率は
よいのですが、システム構成や転送プログラムの処理が必要以上に複雑になってしま
う点が悩ましいところです。
                                  +-------+
                             +--->| host4 |
                  +-------+  |    +-------+
             +--->| host2 |--+
             |    +-------+  |    +-------+
             |               +--->| host5 |
  +-------+  |                    +-------+
  | host1 |--+          
  +-------+  |                    +-------+
             |               +--->| host6 |
             |    +-------+  |    +-------+
             +--->| host3 |--+
                  +-------+  |    +-------+
                             +--->| host7 |
                                  +-------+

その結果として、今度は以下のような別の問題を抱えることになります。
　・軽微な変更や機能追加をするだけでもかなりの労力が必要
  ・不具合が発生したときに挙動を追うのが結構大変
　・動作検証も結構大変

============= 「まくお」はこれらの悩みをすべて解消してくれます =============

【まくおとは】
　makuosan（まくおさん：通称「まくお」）は、複数のサーバへ同時にファイルを転
送するソフトウエアです。以下のような特徴があります。

・デーモンとして各サーバに常駐

・各サーバの「まくお」が互いの存在を通知しあって自動的にメンバシップを構築
  - サーバを増設した際の設定変更作業などは不要
　- 新しいサーバ上で「まくお」を起動させるだけ
  - 既設サーバの設定変更なども不要

・サーバが増えても、転送にかかる時間はほとんどかわらない
  - 5台のサーバが10台に増えても、ほとんど同じ時間で転送が完了する
  - ただし、転送時間は一番応答が遅いサーバの性能に引っ張られる
　- 同程度のスペックのサーバで構築された環境で利用できると望ましい

・「簡単！安全！高速！なファイル転送システム」というコンセプトで開発中


【転送のしくみ】
　ファイル転送にTCPは利用しません。以下の図の host1 はUDPパケットをマルチキャ
ストアドレスに送出することでファイル転送しています。その他のサーバは、そのマ
ルチキャストパケットを受け取ってローカルファイルを生成します。

        +-------+                +-------+
        | host2 |<-----+-------->| host4 |
        +-------+      |         +-------+
                       | 
+-------+              |         +-------+
| host1 |------->(Multicast)---->| host5 |
+-------+        224.0.0.108     +-------+
                       |
                       |
         +-------+     |         +-------+
         | host3 |<----+-------->| host6 |
         +-------+               +-------+

【まくおのメリット】
　「まくお」の最大のメリットは、ファイルを転送する際に転送先ホストを指定しな
くてもよいという点です。

rsync などの1対1の汎用の同期ツールを利用して全サーバにファイルを転送したい場
合は、どうしても転送先のサーバを指定する必要があるので、どこのサーバを指定す
るかを別システム（ノード管理マネージャみたいな感じのなにか）から取得すること
になります。その上で、どうにか工夫して、すべての稼働中のサーバに対して rsync
を実行する処理を書かなければいけません。

「まくお」では、送信先サーバの管理はすべて「まくお」が担います。
ファイルを転送したい場合は、転送対象のファイル名を「まくお」に伝えるだけでよ
いです。例えばこんな感じでいけます。

 $ makuo send -r hogehoge/

このコマンド一発で、全ての稼働中のサーバに hogehoge/ を転送できます。
rsyncを駆使する場合と比べて、遥かにシンプルに実現できることがおわかりいただけ
ると思います。

============================================================================
【インストール手順】
  $ tar zxvf makuosan-x.x.x
  $ cd makuosan-x.x.x
  $ make
  # make install

【ファイル構成】
　「まくお」をインストールすると、以下のファイルがインストールされます。

  /usr/local/sbin/makuosan # 「まくお」本体。全サーバで起動しておく。
  /usr/local/bin/makuo     # コマンドラインツール。転送したい時に使用する。


【起動と停止】
　「まくお」起動時には -bオプションでベースディレクトリを指定します。転送する
ファイルを指定する際には、ベースディレクトリからの相対パスを指定します。
 
   # makuosan -b /var/www -u www-data -g www-data

まくおを停止するには、killコマンドなどでSIGTERMを送って下さい。

   # killall makuosan


【使用方法】
　実際にファイルを転送するには「makuoコマンド」を使用します。

  例）ベースディレクトリ以下のディレクトリツリーを全部転送する
   $ makuo send -r

  例）ベースディレクトリ直下のindex.htmlを転送する(/var/www/index.html)
   $ makuo send index.html

また、makuoコマンドを使わずに転送する方法もあります。

   $ telnet 127.0.0.1 5000
   > send -r
   > quit

これで、makuo send -r と同じことができます。つまり、makuoコマンドは単純にソケッ
ト通信をしてコマンドを中継しているだけなので、telnet や socatを利用しても同様の
操作が可能です。

   host1:~$ telnet 127.0.0.1 5000
   Trying 127.0.0.1...
   Connected to 127.0.0.1.
   Escape character is '^]'.
   > help
   COMMAND:
     quit
     exclude add PATTERN
     exclude del PATTERN
     exclude list
     exclude clear
     send [-n] [-r] [-t host] [filename]
     md5 [-r] [-t host] [filename]
     loglevel num (0-9)
     members
     help
   > quit
   host1:~$ 


【現状の問題／課題など】

　・ブロックデバイスやキャラクタデバイスは転送できない
　・転送先のファイルを消せない（rsync --delete相当の機能がない）
　・sendコマンドのファイル指定にワイルドカードが使えない
　・起動／停止用のスクリプトを作っていない

　今後のバージョンアップで随時対応していく予定です。

