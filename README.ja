【はじめに】
　Webサーバを負荷分散して運用しているような環境では、たくさんのファイルを複
数台のサーバへできるだけ速く転送したくなるものです。例えば、以下のスクリプト
のように、1台づつ順番に転送するのは簡単ですが、これだとサーバが増えるにつれ
て転送にかかる時間も長くなってしまいます。

+-------+          +-------+
| host1 | -------> | host2 |
+-------+          +-------+

+-------+          +-------+
| host1 | -------> | host3 |
+-------+          +-------+

+-------+          +-------+
| host1 | -------> | host4 |
+-------+          +-------+

#!/bin/sh
for i in host2 host3 host4 do
  rsync -aRv /var/www/ $i:/
done

また、この例のようにホスト名をハードコードしてしまうと、サーバが増えたり減っ
たりした際にスクリプトを書き換える必要があります。その結果、サーバ故障時や増
設時などのタイミングで、「ファイルが転送されてない！」みたいなトラブルに見舞
われることは容易に想像できることと思います。

この他にも、以下のような問題が潜んでいます、

・転送中に転送先のサーバがダウンすると、処理が滞ってしまう
・送信元のホストが何度も同じファイルを読むのは無駄に感じる
・rsyncを適切に利用した安全なスクリプトを書くのは難易度が高いと思う
  - ちょっとしたバグが致命傷に繋がることがある
　- 動作検証も結構大変

============= 「まくお」はこれらの悩みをすべて解消してくれます =============

【まくおとは】
　makuosan（まくおさん：通称「まくお」）は、複数のサーバへ同時にファイルを転
送するソフトウエアです。以下のような特徴があります。

・デーモンとして各サーバに常駐させる

・各サーバの「まくお」が互いの存在を通知しあって自動的にメンバシップを構築
  - これにより、サーバを増設しても面倒な設定作業などは不要
　- 新しいサーバ上に「まくお」を常駐させるだけでよい
  - 既設サーバの設定変更なども不要

・サーバが増えても、転送にかかる時間はほとんどかわらない
  - 5台のサーバが10台に増えても、ほとんど同じ時間で転送が完了する
  - 転送時間は一番応答が遅いサーバの性能に引っ張られる
　- 同程度のスペックのサーバ同士で利用できると望ましい

・「簡単で安全で高速なファイル転送システム」というコンセプトで開発中


【転送のしくみ】
　ファイル転送にTCPは利用しません。以下の図のhost1 はUDPパケットをマルチキャス
トアドレスに送出することでファイル転送します。host2, host3, host4 は、そのマル
チキャストパケットを受信してローカルファイルを生成します。

                                  +-------+
                       +--------> | host2 |
                       |          +-------+
                       | 
+-------+              |          +-------+
| host1 | -----> (Multicast) ---> | host3 |
+-------+              |          +-------+
                       |
                       |          +-------+
                       +--------> | host4 |
                                  +-------+

【ファイル構成】
　「まくお」をインストールすると、以下のファイルがインストールされます。

  /usr/local/sbin/makuosan # 「まくお」本体。全サーバで起動しておく。
  /usr/local/bin/makuo     # コマンドラインツール。転送したい時に使用する。


【起動と停止】
　「まくお」起動時には -bオプションでベースディレクトリを指定します。転送する
ファイルを指定する際には、ベースディレクトリからの相対パスを指定します。
 
  例）
   # makuosan -b /var/www -u www-data -g www-data

まくおを停止するには、killコマンドなどでSIGTERMを送って下さい。

  例）
   # killall makuosan


【使用方法】
　実際にファイルを転送するには「makuoコマンド」を使用します。

  例）ベースディレクトリ以下のツリーを全部転送する
   $ makuo send -r

また、makuoコマンドを使わずに転送する方法もあったりします。

   $ telnet 127.0.0.1 5000
   > send -r
   > quit

これでも、makuo send -r と同じことができます。つまり、makuoコマンドは単純にソケ
ット通信をしてコマンドを中継しているだけなので、telnet や socatを利用しても同様
の操作が可能です。

   host1:~$ telnet 127.0.0.1 5000
   Trying 127.0.0.1...
   Connected to 127.0.0.1.
   Escape character is '^]'.
   > help
   COMMAND:
     quit
     exclude add PATTERN
     exclude del PATTERN
     exclude list
     exclude clear
     send [-n] [-r] [-t host] [filename]
     md5 [-r] [-t host] [filename]
     loglevel num (0-9)
     members
     help
   > quit
   host1:~$ 


【現状の問題／課題など】

　・ブロックデバイスやキャラクタデバイスは転送できない
　・転送先のファイルを消せない（rsync --delete相当の機能がない）
　・起動／停止用のスクリプトを作ってない

　これらについては、今後のバージョンアップで随時対応していく予定です。


その他、インストール手順やオプションの詳細についてはINSTALLを参照してください。



